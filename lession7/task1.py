"""
Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()), который должен
принимать данные (список списков) для формирования матрицы.

Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
Примеры матриц вы найдете в методичке.

Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов класса Matrix (двух матриц)
Результатом сложения должна быть новая матрица.

Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы складываем
 с первым элементом первой строки второй матрицы и т.д.
"""


class Matrix:
    def __init__(self, lst):
        self.lst = lst

    def __str__(self):
        return '\n'.join([' '.join(str(numb) for numb in lst) for lst in self.lst])

    def __add__(self, other):
        matrix_str = ''
        if len(self.lst) == len(other.lst):
            for ls1, ls2 in zip(self.lst, other.lst):
                if len(ls1) != len(ls2):
                    return 'Матриицы невозможно сложить'
                matrix_list = [a + b for a, b in zip(ls1, ls2)]
                matrix_str += ' '.join([str(i) for i in matrix_list]) + '\n'
        else:
            return 'Матриицы невозможно сложить'
        return matrix_str


matrix_one = Matrix([[2, 4], [9, 12], [21, 55]])
matrix_two = Matrix([[64, 21], [11, 95], [2, 18]])
print(f'Первая матрица:\n{matrix_one}')
print()
print(f'Вторая матрица:\n{matrix_two}')
print()
print(f'Сумма двух матриц:\n{matrix_one + matrix_two}')
